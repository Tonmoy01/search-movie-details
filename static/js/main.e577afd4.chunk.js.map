{"version":3,"sources":["context.js","components/layout/Nav.js","components/movies/Movie.js","components/movies/Movies.js","components/movies/Search.js","components/layout/Index.js","components/movies/Details.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","movie_list","payload","heading","Provider","dispatch","setState","axios","get","then","res","data","results","catch","err","console","log","value","this","props","children","Component","Consumer","Nav","className","to","Movie","movie","style","width","src","poster_path","alt","original_title","release_date","id","Movies","Fragment","map","item","key","Search","movieName","onChange","e","target","name","findMovie","preventDefault","onSubmit","bind","placeholder","Index","Details","details","match","params","title","height","status","popularity","vote_count","vote_average","original_language","overview","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e577afd4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH_MOVIE':\r\n      return {\r\n        ...state,\r\n        movie_list: action.payload,\r\n        heading: 'Search Results'\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    movie_list: [],\r\n    heading: 'Your Searching List',\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apikey = 'e634dde44fe5cdc96fb075d579867ca5';\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=${apikey}&language=en-US&page=1`\r\n      )\r\n      .then(res => {\r\n        this.setState({ movie_list: res.data.results });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <span className=\"navbar-brand h1 mb-0\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <i className=\"fas fa-video\"></i> Movie Searching\r\n        </Link>\r\n      </span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Movie = props => {\r\n  const { movie } = props;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 mx-auto shadow-sm\" style={{ width: '30rem' }}>\r\n        <div className=\"card-body\">\r\n          <img\r\n            src={\r\n              `https://image.tmdb.org/t/p/w500${movie.poster_path}` === null\r\n                ? 'https://via.placeholder.com/518x600?text=do not+find+image'\r\n                : `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n            }\r\n            className=\"card-img-top mb-3\"\r\n            alt=\"...\"\r\n          />\r\n          <h5>{movie.original_title}</h5>\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-calendar-times\"></i> Realse Date:{' '}\r\n            </strong>{' '}\r\n            {movie.release_date}\r\n          </p>\r\n          <Link\r\n            to={`details/movie/${movie.id}`}\r\n            className=\"btn btn-dark btn-block\"\r\n          >\r\n            <i className=\"fas fa-chevron-right\"></i> View Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Movie from './Movie';\r\n\r\nexport class Movies extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { heading, movie_list } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h3 className=\"text-center mb-4\">{heading}</h3>\r\n              <div className=\"row mx-0\">\r\n                {movie_list.map(item => (\r\n                  <Movie key={item.id} movie={item} />\r\n                ))}\r\n              </div>\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nexport class Search extends Component {\r\n  state = {\r\n    movieName: ''\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  findMovie = (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const apikey = 'e634dde44fe5cdc96fb075d579867ca5';\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=${apikey}&language=en-US&query=${this.state.movieName}`\r\n      )\r\n      .then(res => {\r\n        dispatch({\r\n          type: 'SEARCH_MOVIE',\r\n          payload: res.data.results\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <i className=\"fas fa-film\"></i> Search Your Favorite Movie\r\n              </h1>\r\n              <form onSubmit={this.findMovie.bind(this, dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"search movie\"\r\n                    name=\"movieName\"\r\n                    value={this.state.movieName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Get Search Movie\"\r\n                  className=\"btn btn-dark btn-lg btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Movies from '../movies/Movies';\r\nimport Search from '../movies/Search';\r\n\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Movies />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport class Details extends Component {\r\n  state = {\r\n    details: {}\r\n  };\r\n\r\n  componentDidMount() {\r\n    const apikey = 'e634dde44fe5cdc96fb075d579867ca5';\r\n    axios\r\n      .get(\r\n        `https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=${apikey}&language=en-US`\r\n      )\r\n      .then(res => {\r\n        this.setState({ details: res.data });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { details } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">\r\n          Back To home\r\n        </Link>\r\n        <div className=\"card mx-auto\" style={{ width: '35rem' }}>\r\n          <h5 className=\"card-header\">\r\n            <strong>{details.title}</strong>\r\n          </h5>\r\n          <div className=\"card-body\">\r\n            <img\r\n              className=\"card-img-top mx-auto\"\r\n              src={\r\n                details.poster_path === null\r\n                  ? 'https://via.placeholder.com/518x600?text=do not+find+image'\r\n                  : `https://image.tmdb.org/t/p/w500${details.poster_path}`\r\n              }\r\n              alt=\"...\"\r\n              style={{ width: '518px', height: '600px' }}\r\n            />\r\n            <ul className=\"list-group mt-2\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Status: </strong>{' '}\r\n                {details.status === '' ? 'No' : details.status}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Popularity: </strong>{' '}\r\n                {details.popularity === '' ? 'No' : details.popularity}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Vote Count: </strong>{' '}\r\n                {details.vote_count === '' ? 'No' : details.vote_count}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Vote Average: </strong>{' '}\r\n                {details.vote_average === '' ? 'No' : details.vote_average}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Original Language: </strong>{' '}\r\n                {details.original_language === ''\r\n                  ? 'No'\r\n                  : details.original_language}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Details: </strong>{' '}\r\n                {details.overview === '' ? 'No' : details.overview}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from './context';\nimport Nav from './components/layout/Nav';\nimport Index from './components/layout/Index';\nimport Details from './components/movies/Details';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Nav />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/details/movie/:id\" component={Details} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}